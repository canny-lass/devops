version: 2.1 
orbs: 
  terraform: circleci/terraform@3.0.0
  docker: circleci/docker@2.0.1

jobs:
  build_and_test:
    docker:
      - image: circleci/python:3.9-buster-node-browsers-legacy
        auth:
          username: ibaam15
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          FLASK_CONFIG: testing
          TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
    steps:
      - checkout
      # - run: mkdir test-reports
      # - run:
      #     name: Download Selenium
      #     command: |
      #       curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      # - run:
      #     name: Start Selenium
      #     command: |
      #       java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
      #     background: true
      # - run:
      #     name: Install Python deps in a venv
      #     command: |
      #       python3 -m venv venv
      #       . venv/bin/activate
      #       sudo pip3 install --upgrade pip
      #       pip3 install -r src/requirements.txt
      # - run:
      #     name: Run pytests
      #     command: |
      #       . venv/bin/activate
      #       cd src
      #       pip3 install pytest-cov pytest
      #       pytest --cov --cov-report=xml
      #       cd ..
      # - run:
      #     name: Install Sonarqube scanner
      #     command: |
      #       wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.2.0.1873.zip
      #       unzip sonar-scanner-cli-4.2.0.1873.zip
      # - run:
      #     name: Run Sonarscanner
      #     command: |
      #       export SONAR_SCANNER_OPTS="-Xmx2048m"
      #       eval ./sonar-scanner-4.2.0.1873/bin/sonar-scanner -Dsonar.projectKey=CI-Test \
      #       -Dsonar.sources=./src \
      #       -Dsonar.host.url=http://3.213.147.167:9000 \
      #       -Dsonar.login=d3787126d899de1798d1e0bbefeaf11d0ba0cd46 \
      #       -Dsonar.python.coverage.reportPaths=./src/coverage.xml
      - run:
          name: Scann
          command: |
            curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            --data '{"event_type": "build", "client_payload": { "version": "1.2.3"}}' \
            https://api.github.com/repos/canny-lass/devops/dispatches
             

      # - restore_cache:
      #     key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}

      # - save_cache:
      #     key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      #     paths:
      #       - "venv"
      # - store_artifacts:
      #     path: test-reports/
      #     destination: tr1
      # - store_test_results:
      #     path: test-reports/
  deploy: 
    executor: terraform/default
    steps:
      - checkout
      - terraform/init:
          path: .
      - terraform/validate:
          path: .
      - terraform/fmt:
          path: .
      - terraform/plan:
          path: .
      - terraform/apply:
          path: .

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_and_test
      # - deploy:
      #     requires:
      #       - build_and_test
      #     filters:
      #       branches:
      #         only: master


  